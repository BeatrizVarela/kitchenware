[{"C:\\Users\\User\\kitchenware\\src\\index.js":"1","C:\\Users\\User\\kitchenware\\src\\reportWebVitals.js":"2","C:\\Users\\User\\kitchenware\\src\\App.js":"3","C:\\Users\\User\\kitchenware\\src\\data.js":"4","C:\\Users\\User\\kitchenware\\src\\pages\\ShoppingAlerts.js":"5","C:\\Users\\User\\kitchenware\\src\\pages\\Tableware.js":"6","C:\\Users\\User\\kitchenware\\src\\pages\\Ingredients.js":"7","C:\\Users\\User\\kitchenware\\src\\pages\\HomePage.js":"8","C:\\Users\\User\\kitchenware\\src\\pages\\Recipes.js":"9","C:\\Users\\User\\kitchenware\\src\\components\\Settings.js":"10","C:\\Users\\User\\kitchenware\\src\\components\\SavedRecipes.js":"11","C:\\Users\\User\\kitchenware\\src\\components\\Recipe.js":"12","C:\\Users\\User\\kitchenware\\src\\components\\IngredientList.js":"13","C:\\Users\\User\\kitchenware\\src\\components\\TablewareChecker.js":"14"},{"size":589,"mtime":1613990065279,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1613990012075,"results":"17","hashOfConfig":"16"},{"size":3485,"mtime":1615749267659,"results":"18","hashOfConfig":"16"},{"size":3202,"mtime":1615226722022,"results":"19","hashOfConfig":"16"},{"size":238,"mtime":1613990065303,"results":"20","hashOfConfig":"16"},{"size":2063,"mtime":1615651012826,"results":"21","hashOfConfig":"16"},{"size":2029,"mtime":1615664723645,"results":"22","hashOfConfig":"16"},{"size":1078,"mtime":1614787370220,"results":"23","hashOfConfig":"16"},{"size":5021,"mtime":1615664723701,"results":"24","hashOfConfig":"16"},{"size":1135,"mtime":1614766758551,"results":"25","hashOfConfig":"16"},{"size":778,"mtime":1615664723634,"results":"26","hashOfConfig":"16"},{"size":2082,"mtime":1615664723631,"results":"27","hashOfConfig":"16"},{"size":537,"mtime":1613990065274,"results":"28","hashOfConfig":"16"},{"size":6266,"mtime":1615749384688,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ns00cc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\kitchenware\\src\\index.js",[],["62","63"],"C:\\Users\\User\\kitchenware\\src\\reportWebVitals.js",[],"C:\\Users\\User\\kitchenware\\src\\App.js",["64"],"C:\\Users\\User\\kitchenware\\src\\data.js",[],"C:\\Users\\User\\kitchenware\\src\\pages\\ShoppingAlerts.js",[],"C:\\Users\\User\\kitchenware\\src\\pages\\Tableware.js",[],"C:\\Users\\User\\kitchenware\\src\\pages\\Ingredients.js",[],"C:\\Users\\User\\kitchenware\\src\\pages\\HomePage.js",[],"C:\\Users\\User\\kitchenware\\src\\pages\\Recipes.js",["65"],"import Recipe from \"../components/Recipe\"\r\nimport SavedRecipes from \"../components/SavedRecipes\"\r\nimport { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport { BsCalendar,BsFillBookmarkFill } from 'react-icons/bs'\r\nimport { RiHistoryFill } from 'react-icons/ri'\r\nimport \"../styles/Recipes.scss\"\r\n\r\n\r\n\r\nconst Recipes = ({ingAndRec}) => {\r\n\r\n    const [recipeName,recipeNameOnChange] = useState(\"\");\r\n    const [recipeFilter, setrecipeFilter] = useState([]);\r\n    const [recipeDificulty, setrecipeDificulty] = useState([])\r\n    const [savedOpen, setSavedOpen] = useState(false);\r\n\r\n    var savedRecipes = []\r\n\r\n    const dificultyChange = (event) => {\r\n        let newList = [...recipeDificulty]\r\n        if (newList.includes(event.target.value)){\r\n            let index = newList.indexOf(event.target.value)\r\n            newList.splice(index, 1);\r\n        } else {\r\n            newList.push(event.target.value)\r\n        }\r\n        setrecipeDificulty(newList)\r\n    }\r\n\r\n    const recipeFilterOnChange = (e) => {\r\n        let filter = e.target.innerHTML;\r\n        let newRecipeFilterList = [];\r\n        /*if (newRecipeFilterList.includes(filter)) {\r\n            let i = newRecipeFilterList.indexOf(filter);\r\n            newRecipeFilterList.splice(i, 1);\r\n        } else {\r\n            \r\n        }*/\r\n        if (filter === 'Remove Filters'){\r\n            newRecipeFilterList = []\r\n        } else {\r\n            newRecipeFilterList.push(filter)\r\n        }\r\n\r\n        setrecipeFilter(newRecipeFilterList);\r\n    }\r\n\r\n    if (localStorage.getItem(\"saved-recipes\")){\r\n        savedRecipes = localStorage.getItem(\"saved-recipes\")\r\n    } \r\n\r\n    return(\r\n        <section className=\"recipes\">\r\n            <Link to=\"/\">Back</Link>\r\n            <div className=\"search-bar\">\r\n                <label htmlFor=\"search\">Search:</label>\r\n                <input type=\"text\" value={recipeName} onChange={(e) => recipeNameOnChange(e.target.value)} />\r\n            </div>\r\n            <div className=\"functionalities\">\r\n                <button className=\"left-meals-buttons\" id=\"week\">\r\n                    <BsCalendar />\r\n                    <br />\r\n                    This Week\r\n                </button>\r\n                <br />\r\n                <button className=\"left-meals-buttons\" id=\"past\">\r\n                    <RiHistoryFill />\r\n                    <br />\r\n                    Past Meals\r\n                </button>\r\n                <br />\r\n                <button className=\"left-meals-buttons\" id=\"saved\" onClick={(() => setSavedOpen(!(savedOpen)))}>\r\n                    <BsFillBookmarkFill />\r\n                    <br />\r\n                    Saved Meals\r\n                </button>\r\n                <SavedRecipes savedOpen={savedOpen} setSavedOpen={setSavedOpen}/>\r\n            </div>\r\n            <div className=\"filters\">\r\n                <button onClick={recipeFilterOnChange}>Remove Filters</button>\r\n                <p>Filtros aqui</p>\r\n                <button onClick={recipeFilterOnChange}>Vegetarian</button>\r\n                <button onClick={recipeFilterOnChange}>Meat</button>\r\n                <button onClick={recipeFilterOnChange}>Lactose</button>\r\n                <button onClick={recipeFilterOnChange}>Pasta</button>\r\n                <div className=\"difficulty-change\">\r\n                    <h4>Dificulty filter</h4>\r\n                    <label>Easy</label><input type=\"checkbox\" onClick={dificultyChange} value=\"Easy\"/>\r\n                    <label>Medium</label><input type=\"checkbox\" onClick={dificultyChange} value=\"Medium\" />\r\n                    <label>Hard</label><input type=\"checkbox\" onClick={dificultyChange} value=\"Hard\" />\r\n                </div>\r\n            </div>\r\n            {ingAndRec.Recipes.map((recipe) => {\r\n                if (recipe.Name.toUpperCase().indexOf(recipeName.toUpperCase()) > -1) {\r\n                    if (recipeDificulty.length===0){\r\n                        if (recipe.Tags.some(r=> recipeFilter.includes(r)) & recipeFilter.length===1){\r\n                            return <Recipe recipe={recipe} />\r\n                        } else if (recipeFilter.length===0) {\r\n                            return <Recipe recipe={recipe} />\r\n                        } else {\r\n                            return <p></p>\r\n                        }\r\n                    } else if (recipeDificulty.includes(recipe.Difficulty))  {\r\n                        if (recipe.Tags.some(r=> recipeFilter.includes(r)) & recipeFilter.length===1){\r\n                            return <Recipe recipe={recipe} />\r\n                        } else if (recipeFilter.length===0) {\r\n                            return <Recipe recipe={recipe} />\r\n                        } else {\r\n                            return <p></p>\r\n                        }\r\n                    } else {\r\n                        return <p></p>\r\n                    }\r\n                } else {\r\n                    return <p></p>\r\n                }\r\n            })}\r\n        </section>\r\n    );\r\n}\r\nexport default Recipes;","C:\\Users\\User\\kitchenware\\src\\components\\Settings.js",["66"],"import \"../styles/Settings.scss\"\r\nimport { BsGear } from 'react-icons/bs'\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { useState } from 'react'\r\n\r\n\r\nconst Settings = ({darkMode,setdarkMode}) => {\r\n    //{darkMode ? \"Light Mode\" : \"Dark Mode\"}\r\n    const SettingsDarkMode = (event) => {\r\n        setdarkMode(!darkMode);\r\n    }\r\n\r\n    const [showButton, setShowButton] = useState(true);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n\r\n    return(\r\n        <section className=\"settings\">\r\n           <button onClick={() => setShowMessage(true)} id=\"Gear\"><BsGear /> </button>\r\n            <CSSTransition in={showMessage} timeout={300} classNames=\"alert\" unmountOnExit onEnter={() => setShowButton(false)} onExited={() => setShowButton(true)}>\r\n                <div className=\"settings-open\">\r\n                    <button onClick={SettingsDarkMode}>{darkMode ? \"Light Mode\" : \"Dark Mode\" }</button>\r\n                    <button onClick={() => setShowMessage(false)} id=\"close\"> Close </button>\r\n                </div>\r\n            </CSSTransition>\r\n        </section>\r\n    );\r\n}\r\nexport default Settings","C:\\Users\\User\\kitchenware\\src\\components\\SavedRecipes.js",["67","68"],"import { useState } from 'react'\r\n\r\nconst SavedRecipes = ({savedOpen,setSavedOpen}) => {\r\n    /*\r\n                {JSON.parse(localStorage.getItem(\"saved-recipes\")).map((recipe)=> {\r\n                return <h1>Ainda a trabalhar nesta parte :) Stay tuned!!!!</h1>\r\n            })}\r\n\r\n                {savedRecipes.map((recipe)=> {\r\n                return <h1>Ainda a trabalhar nesta parte :) Stay tuned!!!!</h1>\r\n            })}\r\n    */\r\n\r\n   const [savedRecipes,setsavedRecipes] = useState(JSON.parse(localStorage.getItem(\"saved-recipes\")));\r\n\r\n    return(\r\n        <div className={`saved-recipes${savedOpen ? '-show' : '-hidden'}`}>\r\n            <button onClick={(() => setSavedOpen(false))}>Fecha-te Sésamo</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavedRecipes;","C:\\Users\\User\\kitchenware\\src\\components\\Recipe.js",[],"C:\\Users\\User\\kitchenware\\src\\components\\IngredientList.js",[],"C:\\Users\\User\\kitchenware\\src\\components\\TablewareChecker.js",["69","70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":16,"column":21,"nodeType":"78","messageId":"79","endLine":16,"endColumn":33},{"ruleId":"76","severity":1,"message":"80","line":50,"column":9,"nodeType":"78","messageId":"79","endLine":50,"endColumn":21},{"ruleId":"76","severity":1,"message":"81","line":13,"column":12,"nodeType":"78","messageId":"79","endLine":13,"endColumn":22},{"ruleId":"76","severity":1,"message":"80","line":14,"column":11,"nodeType":"78","messageId":"79","endLine":14,"endColumn":23},{"ruleId":"76","severity":1,"message":"82","line":14,"column":24,"nodeType":"78","messageId":"79","endLine":14,"endColumn":39},{"ruleId":"83","severity":1,"message":"84","line":114,"column":49,"nodeType":"85","messageId":"86","endLine":114,"endColumn":51},{"ruleId":"87","severity":1,"message":"88","line":116,"column":21,"nodeType":"89","messageId":"90","endLine":116,"endColumn":23},{"ruleId":"87","severity":1,"message":"88","line":120,"column":24,"nodeType":"89","messageId":"90","endLine":120,"endColumn":26},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'setingAndRec' is assigned a value but never used.","Identifier","unusedVar","'savedRecipes' is assigned a value but never used.","'showButton' is assigned a value but never used.","'setsavedRecipes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]
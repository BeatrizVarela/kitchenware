[{"C:\\Users\\joaot\\Desktop\\kitchenware\\src\\index.js":"1","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\reportWebVitals.js":"2","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\App.js":"3","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\data.js":"4","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\pages\\HomePage.js":"5","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\pages\\Recipes.js":"6","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\pages\\Tableware.js":"7","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\pages\\ShoppingAlerts.js":"8","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\components\\Settings.js":"9","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\pages\\Ingredients.js":"10","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\components\\Recipe.js":"11","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\components\\SavedRecipes.js":"12","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\components\\IngredientList.js":"13"},{"size":589,"mtime":1614854101319,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1614853603830,"results":"16","hashOfConfig":"15"},{"size":3119,"mtime":1615131075158,"results":"17","hashOfConfig":"15"},{"size":6581,"mtime":1615663937737,"results":"18","hashOfConfig":"15"},{"size":963,"mtime":1614854101364,"results":"19","hashOfConfig":"15"},{"size":5589,"mtime":1614854101365,"results":"20","hashOfConfig":"15"},{"size":222,"mtime":1614854101368,"results":"21","hashOfConfig":"15"},{"size":238,"mtime":1614854101367,"results":"22","hashOfConfig":"15"},{"size":1135,"mtime":1614854101317,"results":"23","hashOfConfig":"15"},{"size":3667,"mtime":1615316484845,"results":"24","hashOfConfig":"15"},{"size":2082,"mtime":1614854101313,"results":"25","hashOfConfig":"15"},{"size":872,"mtime":1614854101314,"results":"26","hashOfConfig":"15"},{"size":537,"mtime":1614854101313,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1o7jwfv",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\joaot\\Desktop\\kitchenware\\src\\index.js",[],["59","60"],"C:\\Users\\joaot\\Desktop\\kitchenware\\src\\reportWebVitals.js",[],"C:\\Users\\joaot\\Desktop\\kitchenware\\src\\App.js",["61"],"import HomePage from \"./pages/HomePage\"\r\nimport Settings from \"./components/Settings\"\r\nimport Ingredients from \"./pages/Ingredients\";\r\nimport Recipes from \"./pages/Recipes\"\r\nimport Tableware from \"./pages/Tableware\"\r\nimport ShoppingAlerts from \"./pages/ShoppingAlerts\"\r\nimport data from \"./data\"\r\nimport \"./styles/App.scss\"\r\nimport LightBackground from \"./media/images/kitchenware-lightmode-wallpaper-edited.jpg\"\r\nimport DarkBackground from \"./media/images/kitchenware-darkmode-wallpaper-cut.jpg\"\r\nimport {Switch, Route} from \"react-router\"\r\nimport { useState } from \"react\";\r\n\r\n\r\nfunction App() {\r\n\r\n  const [darkMode,setdarkMode] = useState(false);\r\n  const [ingAndRec,setingAndRec] = useState(data())\r\n\r\n  if (darkMode){\r\n    document.documentElement.style.setProperty('--background-colour', \"#0a0e0f\");\r\n    document.documentElement.style.setProperty('--settings-background-colour', \"#1d1d1d\");\r\n    document.documentElement.style.setProperty('--text-colour', \"#dddddd\");\r\n    document.documentElement.style.setProperty('--background-photo', \"url(\"+DarkBackground+\")\");\r\n    document.documentElement.style.setProperty('--button-background', '#292929');\r\n    document.documentElement.style.setProperty('--pot-color','#d3a4a5');\r\n    document.documentElement.style.setProperty('--homepage-button-colour','#e9f0c6');\r\n    document.documentElement.style.setProperty('--low-opacity-background','rgba(48, 48, 48, 0.5)');\r\n    document.documentElement.style.setProperty(\"--table-background\",\"rgba(34, 34, 34, 0.849)\");\r\n    document.documentElement.style.setProperty(\"--button-background2\",\"#111111\");\r\n\r\n  } else {\r\n    document.documentElement.style.setProperty('--background-colour', \"#e6ecee\");\r\n    document.documentElement.style.setProperty('--settings-background-colour', \"#d4d4d4\");\r\n    document.documentElement.style.setProperty('--text-colour', \"#1d1d1d\");\r\n    document.documentElement.style.setProperty('--background-photo', \"url(\"+LightBackground+\")\");\r\n    document.documentElement.style.setProperty('--button-background', '#ebebeb');\r\n    document.documentElement.style.setProperty('--pot-color','#664243');\r\n    document.documentElement.style.setProperty('--homepage-button-colour','#1d1d1d');\r\n    document.documentElement.style.setProperty('--low-opacity-background','rgba(240, 128, 128, 0.295)');\r\n    document.documentElement.style.setProperty(\"--table-background\",\"#e6bfd694\");\r\n    document.documentElement.style.setProperty(\"--button-background2\",\"#ffc7e8\");\r\n\r\n  }\r\n\r\n  return (\r\n    <section className=\"App\">\r\n      <Settings darkMode={darkMode} setdarkMode={setdarkMode} />\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <HomePage />\r\n        </Route>\r\n        <Route path=\"/ingredients\">\r\n          <Ingredients ingAndRec={ingAndRec}/>\r\n        </Route>\r\n        <Route path=\"/recipes\">\r\n          <Recipes ingAndRec={ingAndRec}/>\r\n        </Route>\r\n        <Route path=\"/tableware\">\r\n          <Tableware />\r\n        </Route>\r\n        <Route path=\"/shopping-alerts\">\r\n          <ShoppingAlerts />\r\n        </Route>\r\n      </Switch>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\data.js",[],"C:\\Users\\joaot\\Desktop\\kitchenware\\src\\pages\\HomePage.js",[],"C:\\Users\\joaot\\Desktop\\kitchenware\\src\\pages\\Recipes.js",["62"],"import Recipe from \"../components/Recipe\"\r\nimport SavedRecipes from \"../components/SavedRecipes\"\r\nimport { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport { BsCalendar,BsFillBookmarkFill } from 'react-icons/bs'\r\nimport { RiHistoryFill } from 'react-icons/ri'\r\nimport \"../styles/Recipes.scss\"\r\n\r\n\r\n\r\nconst Recipes = ({ingAndRec}) => {\r\n\r\n    const [recipeName,recipeNameOnChange] = useState(\"\");\r\n    const [recipeFilter, setrecipeFilter] = useState([]);\r\n    const [recipeDificulty, setrecipeDificulty] = useState([])\r\n    const [savedOpen, setSavedOpen] = useState(false);\r\n\r\n    var savedRecipes = []\r\n\r\n    const dificultyChange = (event) => {\r\n        let newList = [...recipeDificulty]\r\n        if (newList.includes(event.target.innerHTML)){\r\n            let index = newList.indexOf(event.target.innerHTML)\r\n            newList.splice(index, 1);\r\n        } else {\r\n            newList.push(event.target.innerHTML)\r\n        }\r\n        setrecipeDificulty(newList)\r\n        event.target.classList.toggle('Checked');\r\n    }\r\n\r\n    const recipeFilterOnChange = (e) => {\r\n        let filter = e.target.innerHTML;\r\n        let newRecipeFilterList = [...recipeFilter];\r\n        if (newRecipeFilterList.includes(filter)) {\r\n            let i = newRecipeFilterList.indexOf(filter);\r\n            newRecipeFilterList.splice(i, 1);\r\n        }\r\n        if (filter === 'Remove Filters'){\r\n            newRecipeFilterList = []\r\n            let checked = [...document.getElementsByClassName(\"Checked-filter\")]\r\n            if (checked.length>0) {\r\n                let i;\r\n                for (i = 0; i < checked.length; i++){\r\n                    checked[i].classList.toggle('Checked-filter')\r\n                }\r\n            }\r\n        } else {\r\n            newRecipeFilterList.push(filter);\r\n            e.target.classList.toggle('Checked-filter');\r\n        }\r\n\r\n        setrecipeFilter(newRecipeFilterList);\r\n    }\r\n\r\n    if (localStorage.getItem(\"saved-recipes\")){\r\n        savedRecipes = localStorage.getItem(\"saved-recipes\")\r\n    } \r\n\r\n    return(\r\n        <section className=\"recipes\">\r\n            <Link to=\"/\">Back</Link>\r\n            <div className=\"search-bar\">\r\n                <label htmlFor=\"search\">Search:</label>\r\n                <input type=\"text\" value={recipeName} onChange={(e) => recipeNameOnChange(e.target.value)} />\r\n            </div>\r\n            <div className=\"functionalities\">\r\n                <div className=\"button-combo\">\r\n                    <button className=\"left-meals-buttons\" id=\"week\">\r\n                        <BsCalendar />\r\n                    </button>\r\n                    <br />\r\n                    <p>This Week</p>\r\n                    <br />\r\n                </div>\r\n                <div className=\"button-combo\">\r\n                    <button className=\"left-meals-buttons\" id=\"past\">\r\n                        <RiHistoryFill />\r\n                    </button>\r\n                    <br />\r\n                    <p>Past Meals</p>\r\n                    <br />\r\n                </div>\r\n                <div className=\"button-combo\">\r\n                    <button className=\"left-meals-buttons\" id=\"saved\" onClick={(() => setSavedOpen(!(savedOpen)))}>\r\n                        <BsFillBookmarkFill />\r\n                    </button>\r\n                    <br />\r\n                    <p>Saved Meals</p>\r\n                </div>\r\n            </div>\r\n            <SavedRecipes savedOpen={savedOpen} setSavedOpen={setSavedOpen}/>\r\n            <div className=\"filters\">\r\n                <button onClick={recipeFilterOnChange}>Remove Filters</button>\r\n                <p>Filtros aqui</p>\r\n                <button onClick={recipeFilterOnChange}>Vegetarian</button>\r\n                <button onClick={recipeFilterOnChange}>Meat</button>\r\n                <button onClick={recipeFilterOnChange}>Lactose</button>\r\n                <button onClick={recipeFilterOnChange}>Pasta</button>\r\n                <div className=\"difficulty-change\">\r\n                    <h4>Dificulty filter</h4>\r\n                    <button onClick={dificultyChange}>Easy</button>\r\n                    <button onClick={dificultyChange}>Medium</button>\r\n                    <button onClick={dificultyChange}>Hard</button>\r\n                </div>\r\n            </div>\r\n            {ingAndRec.Recipes.map((recipe) => {\r\n                if (recipe.Name.toUpperCase().indexOf(recipeName.toUpperCase()) > -1) {\r\n                    if (recipeDificulty.length===0){\r\n                        if (recipe.Tags.some(r=> recipeFilter.includes(r)) & recipeFilter.length===1){\r\n                            return <Recipe recipe={recipe} />\r\n                        } else if (recipeFilter.length===0) {\r\n                            return <Recipe recipe={recipe} />\r\n                        } else {\r\n                            return <p></p>\r\n                        }\r\n                    } else if (recipeDificulty.includes(recipe.Difficulty))  {\r\n                        if (recipe.Tags.some(r=> recipeFilter.includes(r)) & recipeFilter.length===1){\r\n                            return <Recipe recipe={recipe} />\r\n                        } else if (recipeFilter.length===0) {\r\n                            return <Recipe recipe={recipe} />\r\n                        } else {\r\n                            return <p></p>\r\n                        }\r\n                    } else {\r\n                        return <p></p>\r\n                    }\r\n                } else {\r\n                    return <p></p>\r\n                }\r\n            })}\r\n        </section>\r\n    );\r\n}\r\nexport default Recipes;","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\pages\\Tableware.js",[],"C:\\Users\\joaot\\Desktop\\kitchenware\\src\\pages\\ShoppingAlerts.js",[],"C:\\Users\\joaot\\Desktop\\kitchenware\\src\\components\\Settings.js",["63"],"import \"../styles/Settings.scss\"\r\nimport { BsGear } from 'react-icons/bs'\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { useState } from 'react'\r\n\r\n\r\nconst Settings = ({darkMode,setdarkMode}) => {\r\n    //{darkMode ? \"Light Mode\" : \"Dark Mode\"}\r\n    const SettingsDarkMode = (event) => {\r\n        setdarkMode(!darkMode);\r\n    }\r\n\r\n    const [showButton, setShowButton] = useState(true);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n\r\n    return(\r\n        <section className=\"settings\">\r\n           <button onClick={() => setShowMessage(true)} id=\"Gear\"><BsGear /> </button>\r\n            <CSSTransition in={showMessage} timeout={300} classNames=\"alert\" unmountOnExit onEnter={() => setShowButton(false)} onExited={() => setShowButton(true)}>\r\n                <div className=\"settings-open\">\r\n                    <button onClick={SettingsDarkMode}>{darkMode ? \"Light Mode\" : \"Dark Mode\" }</button>\r\n                    <button onClick={() => setShowMessage(false)} id=\"close\"> Close </button>\r\n                </div>\r\n            </CSSTransition>\r\n        </section>\r\n    );\r\n}\r\nexport default Settings","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\pages\\Ingredients.js",[],"C:\\Users\\joaot\\Desktop\\kitchenware\\src\\components\\Recipe.js",[],"C:\\Users\\joaot\\Desktop\\kitchenware\\src\\components\\SavedRecipes.js",["64","65"],"import { useState } from 'react'\r\n\r\nconst SavedRecipes = ({savedOpen,setSavedOpen}) => {\r\n    /*\r\n                {JSON.parse(localStorage.getItem(\"saved-recipes\")).map((recipe)=> {\r\n                return <h1>Ainda a trabalhar nesta parte :) Stay tuned!!!!</h1>\r\n            })}\r\n\r\n                {savedRecipes.map((recipe)=> {\r\n                return <h1>Ainda a trabalhar nesta parte :) Stay tuned!!!!</h1>\r\n            })}\r\n    */\r\n\r\n   const [savedRecipes,setsavedRecipes] = useState(JSON.parse(localStorage.getItem(\"saved-recipes\"))); \r\n\r\n   /*const Test = ({arrayLength}) => {\r\n       if (arrayLength>1) {\r\n\r\n       }\r\n   }*/\r\n\r\n    return(\r\n        <div className={`saved-recipes${savedOpen ? '-show' : '-hidden'}`}>\r\n            <button onClick={(() => setSavedOpen(false))}>Fecha-te Sésamo</button>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavedRecipes;","C:\\Users\\joaot\\Desktop\\kitchenware\\src\\components\\IngredientList.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":18,"column":20,"nodeType":"72","messageId":"73","endLine":18,"endColumn":32},{"ruleId":"70","severity":1,"message":"74","line":57,"column":9,"nodeType":"72","messageId":"73","endLine":57,"endColumn":21},{"ruleId":"70","severity":1,"message":"75","line":13,"column":12,"nodeType":"72","messageId":"73","endLine":13,"endColumn":22},{"ruleId":"70","severity":1,"message":"74","line":14,"column":11,"nodeType":"72","messageId":"73","endLine":14,"endColumn":23},{"ruleId":"70","severity":1,"message":"76","line":14,"column":24,"nodeType":"72","messageId":"73","endLine":14,"endColumn":39},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'setingAndRec' is assigned a value but never used.","Identifier","unusedVar","'savedRecipes' is assigned a value but never used.","'showButton' is assigned a value but never used.","'setsavedRecipes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]